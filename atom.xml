<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘硕的技术查阅手册</title>
  
  <subtitle>Python 全栈开发学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sliu.vip/"/>
  <updated>2020-07-06T14:25:23.745Z</updated>
  <id>https://sliu.vip/</id>
  
  <author>
    <name>刘硕</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>交互模式下启动 Python 项目</title>
    <link href="https://sliu.vip/python-basic/bash-python-proj/"/>
    <id>https://sliu.vip/python-basic/bash-python-proj/</id>
    <published>2020-07-06T13:56:32.415Z</published>
    <updated>2020-07-06T14:25:23.745Z</updated>
    
    <summary type="html">
    
      我这里要讨论的是一个由多个相互关联调用的 Python 文件组成的 Python 项目的启动。
    
    </summary>
    
    
      <category term="Python 基础" scheme="https://sliu.vip/categories/Python-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>SD 卡的格式化</title>
    <link href="https://sliu.vip/raspberry-pi/sd-format/"/>
    <id>https://sliu.vip/raspberry-pi/sd-format/</id>
    <published>2020-07-06T13:56:32.323Z</published>
    <updated>2020-07-06T14:25:23.741Z</updated>
    
    <summary type="html">
    
      格式化树莓派的 SD 卡一般会用到三个工具：SD Card Formatter、这些工具都是树莓派官方建议使用的。如果有其他更好用的，也不是非要用这些。
    
    </summary>
    
    
      <category term="树莓派" scheme="https://sliu.vip/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://sliu.vip/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 表的完整性约束</title>
    <link href="https://sliu.vip/database/mysql-constraint/"/>
    <id>https://sliu.vip/database/mysql-constraint/</id>
    <published>2020-07-06T13:56:31.889Z</published>
    <updated>2020-07-06T14:25:23.736Z</updated>
    
    <summary type="html">
    
      为了防止不符合规范的数据进入数据库，在用户对数据进行插入、修改、删除等操作时，DBMS 自动按照一定的约束条件对数据进行监测，使不符合规范的数据不能进入数据库，以确保数据库中存储的数据正确、有效、相容。
    
    </summary>
    
    
      <category term="数据库" scheme="https://sliu.vip/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>docker Compose 多容器部署</title>
    <link href="https://sliu.vip/linux/docker-compose/"/>
    <id>https://sliu.vip/linux/docker-compose/</id>
    <published>2020-05-01T15:47:01.353Z</published>
    <updated>2020-05-01T16:42:16.263Z</updated>
    
    <summary type="html">
    
      使用 docker 的多容器部署，可以实现负载均衡。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker 初识和安装</title>
    <link href="https://sliu.vip/linux/docker-abc-install/"/>
    <id>https://sliu.vip/linux/docker-abc-install/</id>
    <published>2020-05-01T15:47:01.346Z</published>
    <updated>2020-07-06T13:56:35.585Z</updated>
    
    <summary type="html">
    
      虚拟机是有局限的。因为虚拟机需要占用很多的资源，如果服务器的性能不是很强大，依旧不能部署很多的项目。这时，容器技术横空出世，解决了这个问题。docker 是目前最流行的容器技术的实现。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 的镜像和容器</title>
    <link href="https://sliu.vip/linux/docker-image-container/"/>
    <id>https://sliu.vip/linux/docker-image-container/</id>
    <published>2020-05-01T15:47:01.300Z</published>
    <updated>2020-05-01T16:42:16.256Z</updated>
    
    <summary type="html">
    
      docker 镜像是文件和 meta data 的集合。container 可以理解为运行时的实例。镜像相当于 Python 中的类，而容器相当于对象。对象由类实例化而来，容器由镜像运行而来。一个类可以实例化多个对象，一个镜像也可以运行成为多个容器。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 的网络</title>
    <link href="https://sliu.vip/linux/docker-network/"/>
    <id>https://sliu.vip/linux/docker-network/</id>
    <published>2020-05-01T15:47:01.241Z</published>
    <updated>2020-05-01T16:42:16.252Z</updated>
    
    <summary type="html">
    
      和虚拟机一样，docker 的网络也可以有多种设置模式。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 的持久化存储和数据共享</title>
    <link href="https://sliu.vip/linux/docker-data-share/"/>
    <id>https://sliu.vip/linux/docker-data-share/</id>
    <published>2020-05-01T15:47:01.222Z</published>
    <updated>2020-05-01T16:42:16.247Z</updated>
    
    <summary type="html">
    
      容器中数据存在丢失的风险。因为我们可能会关闭和删除容器。这样容器中的数据也会跟着被删除。所以往往我们都不把数据存放到容器中，而是做一个映射，实现 docker 的持久化存储。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="CentOS" scheme="https://sliu.vip/tags/CentOS/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Django 项目的部署</title>
    <link href="https://sliu.vip/linux/django-proj-deploy/"/>
    <id>https://sliu.vip/linux/django-proj-deploy/</id>
    <published>2020-05-01T15:47:01.160Z</published>
    <updated>2020-05-01T16:42:16.243Z</updated>
    
    <summary type="html">
    
      使用 nginx + uWSGI + Django + virtualenv + supervisor 发布 web 服务器。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
      <category term="Django" scheme="https://sliu.vip/tags/Django/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 快速入门</title>
    <link href="https://sliu.vip/linux/nginx-abc/"/>
    <id>https://sliu.vip/linux/nginx-abc/</id>
    <published>2020-05-01T15:47:01.151Z</published>
    <updated>2020-05-01T16:42:16.238Z</updated>
    
    <summary type="html">
    
      Nginx 是一个使用 C 语言开发的高性能的 HTTP 服务器和反向代理服务器以及电子邮件（IMAP/POP3）代理服务器。在应对高并发情况时，能保持低资源低消耗高性能，高度模块化的设计，配置简洁。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Nginx" scheme="https://sliu.vip/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>LVS + keepalived 实现负载均衡</title>
    <link href="https://sliu.vip/linux/lvs-keepalived-lb/"/>
    <id>https://sliu.vip/linux/lvs-keepalived-lb/</id>
    <published>2020-04-26T17:04:20.094Z</published>
    <updated>2020-05-01T16:42:16.229Z</updated>
    
    <summary type="html">
    
      负载均衡可以采用硬件设备，也可以采用软件负载。但是商用硬件负载设备成本通常较高，所以一般情况下会采用软件负载。软件负载解决的两个核心问题是：选谁、转发，其中最著名的是 LVS。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Redis 分布式缓存</title>
    <link href="https://sliu.vip/linux/redis-distributed-cache/"/>
    <id>https://sliu.vip/linux/redis-distributed-cache/</id>
    <published>2020-04-26T17:04:20.065Z</published>
    <updated>2020-05-01T16:42:16.221Z</updated>
    
    <summary type="html">
    
      NoSQL 的英文全称是 Not Only SQL，意即“不仅仅是 SQL”，泛指非关系型的数据库。随着互联网 web 2.0 网站的兴起，传统的关系数据库在应付 web 2.0 网站，特别是超大规模和高并发的 SNS 类型的 web 2.0 纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Redis" scheme="https://sliu.vip/tags/Redis/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>数据库、数据表和数据的基本操作</title>
    <link href="https://sliu.vip/database/mysql-db-tb/"/>
    <id>https://sliu.vip/database/mysql-db-tb/</id>
    <published>2020-04-25T16:28:08.408Z</published>
    <updated>2020-05-01T16:42:16.216Z</updated>
    
    <summary type="html">
    
      SQL，中文全称是结构化查询语言（Structured Query Language），简称 SQL（发音：/ˈes kjuː ˈel/，即 `S-Q-L`），是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统关系数据库系统
    
    </summary>
    
    
      <category term="数据库" scheme="https://sliu.vip/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 中的数据类型</title>
    <link href="https://sliu.vip/database/mysql-data-type/"/>
    <id>https://sliu.vip/database/mysql-data-type/</id>
    <published>2020-04-25T16:28:08.396Z</published>
    <updated>2020-07-06T13:56:35.540Z</updated>
    
    <summary type="html">
    
      MySQL中的数据类型主要有五种：数值类型、字符串类型、时间类型、枚举和集合、函数。
    
    </summary>
    
    
      <category term="数据库" scheme="https://sliu.vip/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 客户端命令</title>
    <link href="https://sliu.vip/database/mysql-client-command/"/>
    <id>https://sliu.vip/database/mysql-client-command/</id>
    <published>2020-04-25T16:28:08.376Z</published>
    <updated>2020-05-01T16:42:16.209Z</updated>
    
    <summary type="html">
    
      一些关于 MySQL 登录和权限的设置。包括使用用户名和密码进入和退出客户端的方式，用户名和密码设置，以及授权其他用户访问数据库的方法。
    
    </summary>
    
    
      <category term="数据库" scheme="https://sliu.vip/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>ZooKeeper 分布式调度</title>
    <link href="https://sliu.vip/linux/distributed-scheduling/"/>
    <id>https://sliu.vip/linux/distributed-scheduling/</id>
    <published>2020-04-24T17:23:33.483Z</published>
    <updated>2020-05-01T16:42:16.204Z</updated>
    
    <summary type="html">
    
      ZooKeeper 是一个高性能的分布式数据一致性解决方案，它将那些复杂的，容易出错的分布式一致性服务封装起来，构成一个高效可靠的原语集，并提供一系列简单易用的接口给用户使用。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 分布式存储</title>
    <link href="https://sliu.vip/linux/mysql-distributed-storage/"/>
    <id>https://sliu.vip/linux/mysql-distributed-storage/</id>
    <published>2020-04-24T17:23:33.461Z</published>
    <updated>2020-05-01T16:42:16.200Z</updated>
    
    <summary type="html">
    
      服务器集群就是指将很多服务器集中起来一起进行同一种服务，在客户端看来就像是只有一个服务器。集群可以利用多个计算机进行并行计算从而获得很高的计算速度，也可以用多个计算机做备份，其中有任何一个机器出故障，其他机器能够顶替并正常运行，提高系统的容灾性。服务器集群处理提高系统性能，提高响应速度，还可以用作容灾备份，例如 MySQL 的主从复制与双主互备。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>分类模型的评价指标</title>
    <link href="https://sliu.vip/machine-learning/classification-evaluation/"/>
    <id>https://sliu.vip/machine-learning/classification-evaluation/</id>
    <published>2020-04-24T17:23:31.632Z</published>
    <updated>2020-05-01T16:42:16.197Z</updated>
    
    <summary type="html">
    
      对于线性回归模型，我们可以通过均方差和 R2 来评价结果的优劣。对于分类模型，我们则可以通过其他指标，比如准确率、精准率、召回率、f1-Score 和 auc 曲线等来评价。
    
    </summary>
    
    
      <category term="机器学习" scheme="https://sliu.vip/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
      <category term="Anaconda" scheme="https://sliu.vip/tags/Anaconda/"/>
    
      <category term="机器学习" scheme="https://sliu.vip/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="Scikit-Learn" scheme="https://sliu.vip/tags/Scikit-Learn/"/>
    
  </entry>
  
  <entry>
    <title>远程连接 CentOS</title>
    <link href="https://sliu.vip/linux/remote-connection/"/>
    <id>https://sliu.vip/linux/remote-connection/</id>
    <published>2020-04-22T17:12:11.239Z</published>
    <updated>2020-05-01T16:42:16.193Z</updated>
    
    <summary type="html">
    
      平时，我们几乎不会之间在 VMware 上使用 CentOS 系统，而是会使用 ssh 工具远程操控。Windows 平台，可以使用 Xshell 或者 secureCRT 这 2 款软件，都是封装了 ssh 远程连接工具的。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="CentOS" scheme="https://sliu.vip/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>解压缩包安装 JDK</title>
    <link href="https://sliu.vip/linux/jdk-installation/"/>
    <id>https://sliu.vip/linux/jdk-installation/</id>
    <published>2020-04-22T17:12:11.164Z</published>
    <updated>2020-05-01T16:42:16.189Z</updated>
    
    <summary type="html">
    
      Windows 中，有一种软件的安装方式被称为“绿色软件”。也就是将安装好的文件直接拷贝到另一台电脑中运行，而无需额外的安装操作。类似地，CentOS 也可以通过这种方式安装软件。将软件在同样的系统中编译安装好，然后我们直接用编译好的安装包即可使用，而不需要繁复的安装操作。Java JDK 就可以这样安装。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="CentOS" scheme="https://sliu.vip/tags/CentOS/"/>
    
  </entry>
  
</feed>
