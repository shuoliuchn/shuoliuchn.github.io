<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘硕的技术查阅手册</title>
  
  <subtitle>Python 全栈开发学习笔记</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://sliu.vip/"/>
  <updated>2020-11-08T16:46:15.367Z</updated>
  <id>https://sliu.vip/</id>
  
  <author>
    <name>刘硕</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker 部署 MySQL 5.7</title>
    <link href="https://sliu.vip/linux/docker-mysql57/"/>
    <id>https://sliu.vip/linux/docker-mysql57/</id>
    <published>2020-11-08T16:31:00.250Z</published>
    <updated>2020-11-08T16:46:15.367Z</updated>
    
    <summary type="html">
    
      Linux 上直接部署 MySQL 比较繁琐，使用 Docker 就方便许多。而且可以指定安装任意版本的 MySQL，灵活性极佳。本文简要介绍如何使用 Docker 部署 MySQL 5.7 版本。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker 安装 Redis</title>
    <link href="https://sliu.vip/linux/docker-redis/"/>
    <id>https://sliu.vip/linux/docker-redis/</id>
    <published>2020-11-08T16:31:00.166Z</published>
    <updated>2020-11-08T16:46:15.364Z</updated>
    
    <summary type="html">
    
      其实 Linux 直接安装 Redis 也是很方便的，不过 Docker 在后期管理会更方便。日后迁移起来也更容易。本文介绍如何通过 Docker 部署 Redis。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="https://sliu.vip/tags/Redis/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker 部署 GitLab</title>
    <link href="https://sliu.vip/linux/docker-gitlab/"/>
    <id>https://sliu.vip/linux/docker-gitlab/</id>
    <published>2020-11-08T16:31:00.142Z</published>
    <updated>2020-11-08T16:46:15.361Z</updated>
    
    <summary type="html">
    
      对于开源代码来说，使用 GitHub 和码云这样的代码托管平台会更合适。但是对于不想公开的私有代码，恐怕就不希望公开发布在这些网站上了。虽然 GitHub 提供免费的私有仓库，但是因为政治原因，总给人以不安全的感觉。对于技术人员，有一个自己的代码管理平台管理私人代码是很必要的。毫无疑问，GitLab 是私人代码平台最优的选择，毕竟不需要花钱。但是直接搭建 GitLab 又会有兼容问题。好在 GitLab 封装成了 Docker 容器，我们可以使用 Docker 很容易地部署自己的 GitLab 平台，管理我们的代码。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Git" scheme="https://sliu.vip/tags/Git/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>mysqlclient 安装</title>
    <link href="https://sliu.vip/linux/mysqlclient/"/>
    <id>https://sliu.vip/linux/mysqlclient/</id>
    <published>2020-11-08T16:31:00.015Z</published>
    <updated>2020-11-08T16:46:15.357Z</updated>
    
    <summary type="html">
    
      新版本的 Django 都不支持使用很方便安装的 pymysql。可以通过修改源码的方式来实现对 pymysql 的支持。但是官方不建议的操作自然有它的道理，而且 pymysql 的效率的确不高。相比之下，C 语言开发的 mysqlclient 就很高效。当然，随之而来的是安装十分不便，无法直接 pip 安装，需要先安装依赖才行。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
      <category term="Django" scheme="https://sliu.vip/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Python 运算符优先级</title>
    <link href="https://sliu.vip/python-basic/operator-precedence/"/>
    <id>https://sliu.vip/python-basic/operator-precedence/</id>
    <published>2020-11-08T16:30:59.328Z</published>
    <updated>2020-11-08T16:46:15.354Z</updated>
    
    <summary type="html">
    
      Python 表达式中各种运算符是有优先级的，优先级高的先运算，优先级低的后运算。本文介绍了 Python 运算符的优先级排列。
    
    </summary>
    
    
      <category term="Python 基础" scheme="https://sliu.vip/categories/Python-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
      <category term="Python 基础" scheme="https://sliu.vip/tags/Python-%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 系统安装和 Python 开发环境配置</title>
    <link href="https://sliu.vip/python-basic/ubuntu-python/"/>
    <id>https://sliu.vip/python-basic/ubuntu-python/</id>
    <published>2020-11-08T16:30:59.102Z</published>
    <updated>2020-11-08T16:46:15.351Z</updated>
    
    <summary type="html">
    
      从零开始，安装 Ubuntu 系统，逐步配置成完善的 Python 开发环境。
    
    </summary>
    
    
      <category term="Python 基础" scheme="https://sliu.vip/categories/Python-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Ubuntu" scheme="https://sliu.vip/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>树莓派搭建简单的 Git 服务器</title>
    <link href="https://sliu.vip/raspberry-pi/git/"/>
    <id>https://sliu.vip/raspberry-pi/git/</id>
    <published>2020-11-08T16:30:59.052Z</published>
    <updated>2020-11-08T16:46:15.347Z</updated>
    
    <summary type="html">
    
      Git 服务器其实很简单，不过是将文件传输过去而已，虽然简单了点，没有什么认证机制，不过个人用用其实也是很可以的。
    
    </summary>
    
    
      <category term="树莓派" scheme="https://sliu.vip/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="Git" scheme="https://sliu.vip/tags/Git/"/>
    
      <category term="树莓派" scheme="https://sliu.vip/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>使用 Markdown + Hexo 搭建个人博客系列简介</title>
    <link href="https://sliu.vip/hexo/introduction/"/>
    <id>https://sliu.vip/hexo/introduction/</id>
    <published>2020-11-08T16:30:58.472Z</published>
    <updated>2020-11-08T16:46:15.344Z</updated>
    
    <summary type="html">
    
      一直想拥有一个属于自己的博客，疫情期间刚好有一点时间可以钻研。经过自己的摸索，终于掌握了使用 Markdown + Hexo 实现个人博客的基本方法。独乐乐不如众乐乐，就把我学到的东西整理出来，希望能帮到大家。
    
    </summary>
    
    
      <category term="Hexo" scheme="https://sliu.vip/categories/Hexo/"/>
    
    
      <category term="markdown" scheme="https://sliu.vip/tags/markdown/"/>
    
      <category term="博客" scheme="https://sliu.vip/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="Hexo" scheme="https://sliu.vip/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>交互模式下启动 Python 项目</title>
    <link href="https://sliu.vip/python-basic/bash-python-proj/"/>
    <id>https://sliu.vip/python-basic/bash-python-proj/</id>
    <published>2020-07-06T13:56:32.415Z</published>
    <updated>2020-07-06T14:25:23.745Z</updated>
    
    <summary type="html">
    
      我这里要讨论的是一个由多个相互关联调用的 Python 文件组成的 Python 项目的启动。
    
    </summary>
    
    
      <category term="Python 基础" scheme="https://sliu.vip/categories/Python-%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>SD 卡的格式化</title>
    <link href="https://sliu.vip/raspberry-pi/sd-format/"/>
    <id>https://sliu.vip/raspberry-pi/sd-format/</id>
    <published>2020-07-06T13:56:32.323Z</published>
    <updated>2020-07-06T14:25:23.741Z</updated>
    
    <summary type="html">
    
      格式化树莓派的 SD 卡一般会用到三个工具：SD Card Formatter、这些工具都是树莓派官方建议使用的。如果有其他更好用的，也不是非要用这些。
    
    </summary>
    
    
      <category term="树莓派" scheme="https://sliu.vip/categories/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
      <category term="树莓派" scheme="https://sliu.vip/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 表的完整性约束</title>
    <link href="https://sliu.vip/database/mysql-constraint/"/>
    <id>https://sliu.vip/database/mysql-constraint/</id>
    <published>2020-07-06T13:56:31.889Z</published>
    <updated>2020-07-06T14:25:23.736Z</updated>
    
    <summary type="html">
    
      为了防止不符合规范的数据进入数据库，在用户对数据进行插入、修改、删除等操作时，DBMS 自动按照一定的约束条件对数据进行监测，使不符合规范的数据不能进入数据库，以确保数据库中存储的数据正确、有效、相容。
    
    </summary>
    
    
      <category term="数据库" scheme="https://sliu.vip/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="数据库" scheme="https://sliu.vip/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://sliu.vip/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>docker Compose 多容器部署</title>
    <link href="https://sliu.vip/linux/docker-compose/"/>
    <id>https://sliu.vip/linux/docker-compose/</id>
    <published>2020-05-01T15:47:01.353Z</published>
    <updated>2020-05-01T16:42:16.263Z</updated>
    
    <summary type="html">
    
      使用 docker 的多容器部署，可以实现负载均衡。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker 初识和安装</title>
    <link href="https://sliu.vip/linux/docker-abc-install/"/>
    <id>https://sliu.vip/linux/docker-abc-install/</id>
    <published>2020-05-01T15:47:01.346Z</published>
    <updated>2020-11-08T16:31:02.068Z</updated>
    
    <summary type="html">
    
      虚拟机是有局限的。因为虚拟机需要占用很多的资源，如果服务器的性能不是很强大，依旧不能部署很多的项目。这时，容器技术横空出世，解决了这个问题。docker 是目前最流行的容器技术的实现。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 的镜像和容器</title>
    <link href="https://sliu.vip/linux/docker-image-container/"/>
    <id>https://sliu.vip/linux/docker-image-container/</id>
    <published>2020-05-01T15:47:01.300Z</published>
    <updated>2020-05-01T16:42:16.256Z</updated>
    
    <summary type="html">
    
      docker 镜像是文件和 meta data 的集合。container 可以理解为运行时的实例。镜像相当于 Python 中的类，而容器相当于对象。对象由类实例化而来，容器由镜像运行而来。一个类可以实例化多个对象，一个镜像也可以运行成为多个容器。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 的网络</title>
    <link href="https://sliu.vip/linux/docker-network/"/>
    <id>https://sliu.vip/linux/docker-network/</id>
    <published>2020-05-01T15:47:01.241Z</published>
    <updated>2020-05-01T16:42:16.252Z</updated>
    
    <summary type="html">
    
      和虚拟机一样，docker 的网络也可以有多种设置模式。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>docker 的持久化存储和数据共享</title>
    <link href="https://sliu.vip/linux/docker-data-share/"/>
    <id>https://sliu.vip/linux/docker-data-share/</id>
    <published>2020-05-01T15:47:01.222Z</published>
    <updated>2020-05-01T16:42:16.247Z</updated>
    
    <summary type="html">
    
      容器中数据存在丢失的风险。因为我们可能会关闭和删除容器。这样容器中的数据也会跟着被删除。所以往往我们都不把数据存放到容器中，而是做一个映射，实现 docker 的持久化存储。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="CentOS" scheme="https://sliu.vip/tags/CentOS/"/>
    
      <category term="Docker" scheme="https://sliu.vip/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Django 项目的部署</title>
    <link href="https://sliu.vip/linux/django-proj-deploy/"/>
    <id>https://sliu.vip/linux/django-proj-deploy/</id>
    <published>2020-05-01T15:47:01.160Z</published>
    <updated>2020-05-01T16:42:16.243Z</updated>
    
    <summary type="html">
    
      使用 nginx + uWSGI + Django + virtualenv + supervisor 发布 web 服务器。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Python" scheme="https://sliu.vip/tags/Python/"/>
    
      <category term="Django" scheme="https://sliu.vip/tags/Django/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Nginx 快速入门</title>
    <link href="https://sliu.vip/linux/nginx-abc/"/>
    <id>https://sliu.vip/linux/nginx-abc/</id>
    <published>2020-05-01T15:47:01.151Z</published>
    <updated>2020-05-01T16:42:16.238Z</updated>
    
    <summary type="html">
    
      Nginx 是一个使用 C 语言开发的高性能的 HTTP 服务器和反向代理服务器以及电子邮件（IMAP/POP3）代理服务器。在应对高并发情况时，能保持低资源低消耗高性能，高度模块化的设计，配置简洁。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="Nginx" scheme="https://sliu.vip/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>LVS + keepalived 实现负载均衡</title>
    <link href="https://sliu.vip/linux/lvs-keepalived-lb/"/>
    <id>https://sliu.vip/linux/lvs-keepalived-lb/</id>
    <published>2020-04-26T17:04:20.094Z</published>
    <updated>2020-05-01T16:42:16.229Z</updated>
    
    <summary type="html">
    
      负载均衡可以采用硬件设备，也可以采用软件负载。但是商用硬件负载设备成本通常较高，所以一般情况下会采用软件负载。软件负载解决的两个核心问题是：选谁、转发，其中最著名的是 LVS。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Redis 分布式缓存</title>
    <link href="https://sliu.vip/linux/redis-distributed-cache/"/>
    <id>https://sliu.vip/linux/redis-distributed-cache/</id>
    <published>2020-04-26T17:04:20.065Z</published>
    <updated>2020-05-01T16:42:16.221Z</updated>
    
    <summary type="html">
    
      NoSQL 的英文全称是 Not Only SQL，意即“不仅仅是 SQL”，泛指非关系型的数据库。随着互联网 web 2.0 网站的兴起，传统的关系数据库在应付 web 2.0 网站，特别是超大规模和高并发的 SNS 类型的 web 2.0 纯动态网站已经显得力不从心，暴露了很多难以克服的问题，而非关系型的数据库则由于其本身的特点得到了非常迅速的发展。
    
    </summary>
    
    
      <category term="Linux" scheme="https://sliu.vip/categories/Linux/"/>
    
    
      <category term="Redis" scheme="https://sliu.vip/tags/Redis/"/>
    
      <category term="Linux" scheme="https://sliu.vip/tags/Linux/"/>
    
      <category term="运维" scheme="https://sliu.vip/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
</feed>
